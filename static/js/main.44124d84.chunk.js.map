{"version":3,"sources":["slices/ui-slice.js","components/header/header.js","components/loading/loading.js","common/currencies.js","api/api.js","helper/price.js","slices/summary-slice.js","components/settings/settings.js","components/card/card.js","slices/account-slice.js","components/account-list/account-list.js","components/add-account-modal/add-account-modal.js","pages/summary/summary.js","pages/card-list/card-list.js","pages/rented-cards/rented-cards.js","App.js","reportWebVitals.js","store/store.js","index.js"],"names":["UISlice","createSlice","name","initialState","isLoading","darkTheme","currency","isShowSettings","reducers","state","action","payload","setTheme","setCurrency","Header","dispatch","useDispatch","history","useHistory","id","className","onClick","push","actions","Loading","useEffect","document","body","classList","add","remove","src","process","height","currencies","responseBody","response","data","request","url","axios","get","then","API","Price","getDECPrice","curr","getSPSPrice","Splinterlands","getPlayerBalance","username","getPlayerSettings","a","dec_price","resp","toLowerCase","console","log","catch","error","alert","sps_price","err","SummarySlice","form","show","total","accounts","dec","sps","s_sps","con_dec_price","con_sps_price","setForm","showForm","setTotal","Settings","ui","useSelector","summary","useState","setDarkTheme","saveSettings","settings","localStorage","setItem","JSON","stringify","htmlFor","value","onChange","e","target","Currencies","map","c","i","type","checked","Card","props","headerclass","header","style","minHeight","children","AccountSlice","addAccount","deleteAccount","filter","setAccounts","AccountList","backgroundColor","borderBottom","fnRefresh","overflow","ecr","rank","rating","toLocaleString","power","credits","untamed","quest_potion","gold_potion","legend_potion","filtered","parse","getItem","acc","AddAccountModal","inputRef","useRef","current","focus","ref","placeholder","autoComplete","onKeyUp","keyCode","fnAddAccount","Summary","getAccountDetails","length","forEach","account","token","balance","collection_power","season_details","curLeague","l","league","accountList","getAllAccounts","accountsArr","details","refresh","res","accountsList","init","setInterval","total_accounts","total_dec","total_sps","total_ssps","total_con_dec","total_con_sps","total_con_ssps","CardList","RentedCards","App","exact","path","to","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.44124d84.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n    isLoading : false,\r\n    darkTheme : true,\r\n    currency  : 'PHP',\r\n    isShowSettings : false,\r\n}\r\nconst UISlice =  createSlice({\r\n    name: 'ui',\r\n    initialState :initialState,\r\n    reducers : {\r\n        isLoading(state, action) {\r\n            state.isLoading = action.payload\r\n        },\r\n        setTheme(state, action) {\r\n            state.darkTheme = action.payload\r\n        },\r\n        setCurrency(state, action) {\r\n            state.currency = action.payload;\r\n        },\r\n        isShowSettings(state, action){\r\n            state.isShowSettings = action.payload;\r\n        }\r\n    }\r\n})\r\n\r\nexport default UISlice;","import React from 'react';\r\nimport {useDispatch} from 'react-redux';\r\nimport './header.css';\r\nimport UISlice from '../../slices/ui-slice'\r\nimport {useHistory} from 'react-router-dom';\r\n\r\n\r\nconst Header = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const history = useHistory();\r\n\r\n    const showSettings = () => {\r\n        dispatch(UISlice.actions.isShowSettings(true));\r\n    }\r\n    return (\r\n        <div id=\"header\">\r\n            <span>SPLINTERLAND TRACKER |</span>\r\n\r\n            <div id=\"links\">\r\n                <span className=\"link\" onClick={()=> history.push('/dashboard')}>DASHBOARD</span>\r\n                <span className=\"link\" onClick={()=> history.push('/cards')}>CARDS</span>\r\n                <span className=\"link\" onClick={()=> history.push('/rented-cards')}>RENTED CARDS</span>\r\n                <span className=\"link\" onClick={showSettings}>SETTINGS</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import React, {useEffect} from 'react';\r\nimport './loading.css';\r\n\r\n\r\nconst Loading = () => {\r\n\r\n    useEffect(()=> {\r\n        document.body.classList.add('modal-open');\r\n        return ()=>{document.body.classList.remove('modal-open');}\r\n    })\r\n\r\n    return (\r\n        <div id=\"loading\">\r\n\r\n            <div id=\"loading-container\">\r\n                <img src={process.env.PUBLIC_URL + '/img/loading.svg'} height=\"100\"/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loading;","const currencies = [\r\n    'BRL',\r\n    'PHP',\r\n    'AED',\r\n    'ARS',\r\n    'AUD',\r\n    'CNY',\r\n    'EUR',\r\n    'GBP',\r\n    'HKD',\r\n    'IDR',\r\n    'INR',\r\n    'JPY',\r\n    'MYR',\r\n    'SGD',\r\n    'THB',\r\n    'TWD',\r\n    'USD',\r\n    'VES',\r\n    'VND',\r\n]\r\n\r\nexport default currencies","import axios from 'axios';\r\n\r\n// axios.defaults.baseURL = \"http://\";\r\n\r\n// axios.defaults.headers.common['xxapp-client-id'] = '92AE3F86-53F1-4919-B5AB-012454234808';\r\n\r\n// axios.defaults.withCredentials = true;\r\n\r\n// axios.interceptors.response.use(undefined, err => {\r\n//     const {status, data, config } = err.response;\r\n\r\n//     if (status === 401){\r\n//         toast.error('Unauthorized');\r\n//         window.location.reload();\r\n//     }\r\n// })\r\n\r\nconst responseBody = (response) => (response) ? response.data : null;\r\n\r\nconst request = {\r\n    get: (url) => axios.get(url).then(responseBody),\r\n    post: (url, body) => axios.post(url, body).then(responseBody),\r\n    postWithCancel: (url, body, cancelToken) => axios.post(url, body, cancelToken).then(responseBody),\r\n    put: (url, body) => axios.put(url, body).then(responseBody),\r\n    del: (url) => axios.delete(url).then(responseBody),\r\n    // postFormData :  (url, body) => {\r\n    //     return axios({\r\n    //         method: 'post',\r\n    //         url: url,\r\n    //         data: body,\r\n    //         headers: {'Content-Type': 'multipart/form-data' }\r\n    //         })\r\n    //     .then(responseBody)\r\n    // },\r\n    // postGetAttachment : (url, body) => {\r\n    //     return axios({\r\n    //         method: 'post',\r\n    //         url: url,\r\n    //         data: body,\r\n    //         responseType : 'blob'\r\n    //     })\r\n    //     .then(responseBody)\r\n    // }\r\n    }\r\n\r\n    const Price = {\r\n        getDECPrice : (curr) => request.get(\"https://api.coingecko.com/api/v3/simple/price?ids=dark-energy-crystals&vs_currencies=\"+ curr),\r\n        getSPSPrice : (curr) => request.get(\"https://api.coingecko.com/api/v3/simple/price?ids=splinterlands&vs_currencies=\"+curr)\r\n    }\r\n\r\n\r\n    const Splinterlands = {\r\n        getPlayerBalance    : (username) => request.get(`https://api.splinterlands.io/players/balances?username=${username}`),\r\n        getPlayerSettings   : (username) => request.get(`https://api.splinterlands.io/players/details?name=${username}`),\r\n    }\r\n    const API = {\r\n        Price,\r\n        Splinterlands\r\n    }\r\n\r\n    export default API;","import React from 'react';\r\nimport API from '../api/api';\r\n\r\n\r\nexport const getDECPrice = async(curr) => {\r\n    let dec_price = 0;\r\n    await API.Price.getDECPrice(curr)\r\n    .then(resp => {\r\n        dec_price = resp[\"dark-energy-crystals\"][`${curr.toLowerCase()}`];\r\n        console.log(dec_price);\r\n    })\r\n    .catch(error => {\r\n        console.error(error)\r\n        alert('An error occured');\r\n        return null;\r\n    });\r\n\r\n    return dec_price;\r\n}\r\n\r\nexport const getSPSPrice = async(curr) => {\r\n\r\n    let sps_price = 0;\r\n    await API.Price.getSPSPrice(curr)\r\n    .then(resp => {\r\n        sps_price = resp[\"splinterlands\"][`${curr.toLowerCase()}`];\r\n    })\r\n    .catch(err => {\r\n        console.error(err)\r\n        alert('An error occured');\r\n        return null;\r\n    });\r\n\r\n    return sps_price;\r\n\r\n}","import {createSlice} from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n    form        : {username: \"\", show: false},\r\n    total       : {\r\n        accounts: 0,\r\n        dec: 0,\r\n        sps: 0,\r\n        s_sps: 0,\r\n        dec_price: 0,\r\n        sps_price: 0,\r\n        con_dec_price : 0,\r\n        con_sps_price : 0\r\n    }\r\n};\r\n\r\nconst SummarySlice = createSlice({\r\n    name            : 'summary',\r\n    initialState    : initialState,\r\n    reducers        : {\r\n        setForm(state, action){\r\n            state.form.username = action.payload\r\n        },\r\n        showForm(state, action){\r\n            state.form.show = action.payload\r\n        },\r\n        setTotal(state,action){\r\n            state.total = action.payload\r\n        }\r\n    }\r\n})\r\n\r\nexport default SummarySlice;","import React, {useEffect, useState} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport Currencies from '../../common/currencies';\r\nimport UISlice from '../../slices/ui-slice';\r\nimport {getDECPrice, getSPSPrice} from '../../helper/price';\r\nimport './settings.css'\r\nimport SummarySlice from '../../slices/summary-slice';\r\n\r\nconst Settings = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const ui = useSelector(state => state.ui);\r\n    const summary = useSelector(state => state.summary);\r\n    const [currency, setCurrency] = useState(ui.currency);\r\n    const [darkTheme, setDarkTheme] = useState(ui.darkTheme);\r\n\r\n    const hideSettings = () => {\r\n        dispatch(UISlice.actions.isShowSettings(false));\r\n    }\r\n\r\n    const onCurrencyChangeHandler = (e) => {\r\n        setCurrency(e.target.value);\r\n    }\r\n\r\n    const saveSettings = async() => {\r\n        dispatch(UISlice.actions.setCurrency(currency));\r\n        dispatch(UISlice.actions.setTheme(darkTheme))\r\n        dispatch(UISlice.actions.isShowSettings(false));\r\n\r\n        //save settings to localStorage\r\n        const settings = {currency : currency, darkTheme : darkTheme}\r\n        localStorage.setItem('settings', JSON.stringify(settings));\r\n\r\n        //update prices\r\n\r\n        let dec_price = await getDECPrice('USD');\r\n        let sps_price = await getSPSPrice('USD');\r\n\r\n        let con_dec_price = await getDECPrice(settings.currency);\r\n        let con_sps_price = await getSPSPrice(settings.currency);\r\n\r\n        dispatch(SummarySlice.actions.setTotal({\r\n            ...summary.total,\r\n            dec_price : dec_price,\r\n            sps_price : sps_price,\r\n            con_dec_price : con_dec_price,\r\n            con_sps_price : con_sps_price\r\n        }));\r\n\r\n    }\r\n\r\n    useEffect(()=> {\r\n        document.body.classList.add('modal-open');\r\n        return ()=>{document.body.classList.remove('modal-open');}\r\n    })\r\n\r\n    return (\r\n        <div id=\"settings\">\r\n            <div id=\"overlay\"></div>\r\n            <div id=\"main\">\r\n                <div id=\"form\">\r\n                    <div className=\"p-2\"><h5>Settings</h5></div>\r\n                    <div className='p-2 form-group'>\r\n                        <label htmlFor=\"currency\">Currency</label>\r\n                        <select className='form-control' id=\"currency\" name=\"currency\" value={currency}\r\n                        onChange={onCurrencyChangeHandler}>\r\n                            {Currencies.map((c, i) => {\r\n                                return <option value={c} key={i}>{c}</option>\r\n                            })}\r\n                        </select>\r\n                    </div>\r\n                    <div className='p-2'>\r\n                        <div className=\"form-check form-switch\">\r\n                            <input className=\"form-check-input\" type=\"checkbox\" id=\"flexSwitchCheckDefault\" checked={darkTheme} onChange={(e)=> setDarkTheme(e.target.checked)}/>\r\n                            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"d-flex justify-content-end\">\r\n                        <button className=\"btn btn-danger btn-sm m-1\" onClick={hideSettings}>Cancel</button>\r\n                        <button className=\"btn btn-success btn-sm m-1\" onClick={saveSettings}>Submit</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings;\r\n\r\n","import React from 'react'\r\n\r\nconst Card = (props) => {\r\n    return (\r\n        <div className={`card ${props.className}`} {...props}>\r\n            <div className={`card-header ${props.headerclass}`}>{props.header}</div>\r\n            <div className=\"card-body\" style={{minHeight: '75px'}}>\r\n                {props.children}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card;","import {createSlice} from '@reduxjs/toolkit';\r\n\r\n\r\nconst initialState = [];\r\n\r\nconst AccountSlice = createSlice({\r\n    name            : 'accounts',\r\n    initialState    : initialState,\r\n    reducers       : {\r\n        addAccount(state, action){\r\n            state.push(action.payload);\r\n        },\r\n        deleteAccount(state, action){\r\n            let filtered = state.filter(a => a.username !== action.payload)\r\n            return filtered\r\n        },\r\n        setAccounts(state, action){\r\n            return action.payload;\r\n        }\r\n    }\r\n});\r\n\r\nexport default AccountSlice;","import React from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport AccountSlice from '../../slices/account-slice';\r\nimport './account-list.css';\r\nimport SummarySlice from '../../slices/summary-slice'\r\n\r\nconst AccountList = (props) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const summary = useSelector(state => state.summary);\r\n    console.log(props);\r\n\r\n    return (\r\n        <div id=\"account-list\" className=\"w-100\" style={{backgroundColor: \"#444\"}}>\r\n            <div id=\"account-list-header\" className=\"d-flex justify-content-between p-2\" style={{borderBottom: \"1px solid #333\"}}>\r\n                <h5 className=\"text-white\">Account List</h5>\r\n                <div>\r\n                    <button className=\"btn-sm btn-success m-1\" onClick={()=>{\r\n                        dispatch(SummarySlice.actions.showForm(true))\r\n                    }}>ADD</button>\r\n                    <button className=\"btn-sm btn-info m-1\" onClick={props.fnRefresh}>REFRESH</button>\r\n                    <button className=\"btn-sm btn-warning m-1\">EXPORT</button>\r\n                </div>\r\n\r\n                \r\n            </div>\r\n            <div className=\"p-1 w-100\" style={{overflow: 'auto'}}>\r\n                <table className=\"table table-dark table-striped table-sm\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>#</th>\r\n                            <th>Username</th>\r\n                            <th>ECR</th>\r\n                            <th>Rank</th>\r\n                            <th>Rating</th>\r\n                            <th>Power</th>\r\n                            <th>In-game DEC</th>\r\n                            <th>SPS</th>\r\n                            <th>Staked SPS</th>\r\n                            <th>Credits</th>\r\n                            <th>Untamed Packs</th>\r\n                            <th>Quest Potion</th>\r\n                            <th>Gold Potion</th>\r\n                            <th>Legendary Potion</th>\r\n                            <th>Action</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {props.accounts.map((a, i) => (\r\n                            <tr key={i}>\r\n                                <td>{i+1}</td>\r\n                                <td>{a.username}</td>\r\n                                <td>{`${a.ecr}%`}</td>\r\n                                <td>{a.rank}</td>\r\n                                <td>{a.rating.toLocaleString()}</td>\r\n                                <td>{a.power.toLocaleString()}</td>\r\n                                <td>{a.dec.toLocaleString()}</td>\r\n                                <td>{a.sps.toLocaleString()}</td>\r\n                                <td>{a.s_sps.toLocaleString()}</td>\r\n                                <td>{a.credits.toLocaleString()}</td>\r\n                                <td>{a.untamed}</td>\r\n                                <td>{a.quest_potion.toLocaleString()}</td>\r\n                                <td>{a.gold_potion.toLocaleString()}</td>\r\n                                <td>{a.legend_potion.toLocaleString()}</td>\r\n                                <td><button className=\"btn-sm btn-danger\" onClick={() => {\r\n                                    dispatch(AccountSlice.actions.deleteAccount(a.username));\r\n\r\n                                    //delete in localStorage\r\n                                    let accountList = JSON.parse(localStorage.getItem('accounts'));\r\n                                    let filtered = accountList.filter(acc => acc !== a.username);\r\n                                    console.log(filtered);\r\n                                    localStorage.setItem('accounts', JSON.stringify(filtered));\r\n                                }}>DELETE</button></td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AccountList;","import React, { useEffect, useRef } from 'react';\r\nimport './add-account-modal.css';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport SummarySlice from '../../slices/summary-slice';\r\n\r\n\r\nconst AddAccountModal = (props) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const summary = useSelector(state => state.summary);\r\n    const inputRef = useRef();\r\n\r\n    const onChangeHandler = (e) => {\r\n        dispatch(SummarySlice.actions.setForm(e.target.value.toLowerCase()));\r\n    }\r\n\r\n\r\n\r\n    useEffect(()=> {\r\n        document.body.classList.add('modal-open');\r\n        if(inputRef.current) inputRef.current.focus();\r\n        return ()=>{document.body.classList.remove('modal-open');}\r\n    })\r\n    \r\n    return (\r\n        <div id=\"add-account-modal\">\r\n            <div id=\"overlay\"></div>\r\n\r\n            <div id=\"main\">\r\n                <div id=\"form\">\r\n                    <div className=\"p-2\">\r\n                        <h5 className=\"text-white\">Add Account</h5>\r\n                    </div>\r\n                    <div>\r\n                        <input\r\n                            name=\"username\"\r\n                            ref={inputRef}\r\n                            value={summary.form.username}\r\n                            onChange={onChangeHandler}\r\n                            placeholder=\"ENTER HIVE USERNAME\"\r\n                            autoComplete=\"off\"\r\n                            onKeyUp={(e) => {\r\n                                if(e.keyCode === 13) {\r\n                                    dispatch(SummarySlice.actions.setForm(\"\"));\r\n                                    dispatch(SummarySlice.actions.showForm(false));\r\n                                    props.fnAddAccount(summary.form.username);\r\n                                }\r\n                            }}/>\r\n                        <div className=\"d-flex justify-content-end p-2\">\r\n                            <button className=\"btn-sm btn-danger m-1\" onClick={()=>{\r\n                                dispatch(SummarySlice.actions.showForm(false))\r\n                            }}>Cancel</button>\r\n                            <button className=\"btn-sm btn-success m-1\" onClick={()=> {\r\n                                dispatch(SummarySlice.actions.setForm(\"\"));\r\n                                dispatch(SummarySlice.actions.showForm(false));\r\n                                props.fnAddAccount(summary.form.username);\r\n                            }}>Submit</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default AddAccountModal;","import React, {useState, useEffect} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport './summary.css';\r\nimport Card from '../../components/card/card';\r\nimport API from '../../api/api';\r\nimport AccountList from '../../components/account-list/account-list';\r\nimport AccountSlice from '../../slices/account-slice';\r\nimport UISlice from '../../slices/ui-slice';\r\nimport AddAccountModal from '../../components/add-account-modal/add-account-modal';\r\nimport SummarySlice from '../../slices/summary-slice';\r\nimport {getDECPrice, getSPSPrice} from '../../helper/price';\r\n\r\n\r\nconst Summary = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const accounts = useSelector((state)=> state.accounts);\r\n    const ui = useSelector((state) => state.ui);\r\n    const summary = useSelector((state) => state.summary);\r\n\r\n    const getAccountDetails = async(username) => {\r\n        let dec = 0;\r\n        let sps = 0;\r\n        let s_sps = 0;\r\n        let quest_potion = 0;\r\n        let gold_potion = 0;\r\n        let legend_potion = 0;\r\n        let ecr = 0;\r\n        let untamed = 0;\r\n        let credits = 0;\r\n        let rating = 0;\r\n        let power = 0;\r\n        let rank = \"\";\r\n        let user_exist = false;\r\n\r\n\r\n        await API.Splinterlands.getPlayerBalance(username)\r\n        .then(resp => {\r\n            if (resp.length > 0)\r\n            {\r\n                user_exist = true;\r\n\r\n                resp.forEach((account) => {\r\n                    if(account.token === \"DEC\") dec = account.balance\r\n                    else if (account.token === \"SPS\") sps = account.balance\r\n                    else if (account.token === \"SPSP\") s_sps = account.balance\r\n                    else if (account.token === \"ECR\") ecr = account.balance\r\n                    else if (account.token === \"QUEST\") quest_potion = account.balance\r\n                    else if (account.token === \"GOLD\") gold_potion = account.balance\r\n                    else if (account.token === \"LEGENDARY\") legend_potion = account.balance\r\n                    else if (account.token === \"UNTAMED\") untamed = account.balance\r\n                    else if (account.token === \"CREDITS\") credits = account.balance\r\n                })\r\n\r\n            }\r\n            else\r\n            {\r\n                alert(\"user does not exist\");\r\n                return;\r\n            }\r\n        })\r\n        .catch(err => {\r\n            console.error(err);\r\n            dispatch(UISlice.actions.isLoading(false));\r\n            alert('An error occured');\r\n            return null;\r\n        });\r\n\r\n        await API.Splinterlands.getPlayerSettings(username)\r\n        .then(resp => {\r\n            power = resp.collection_power;\r\n            rating = resp.season_details.rating\r\n           \r\n            const league = [\r\n                {id: 0, name: 'Novice'},\r\n                {id: 1, name: 'Bronze III'},\r\n                {id: 2, name: 'Bronze II'},\r\n                {id: 3, name: 'Bronze I'},\r\n                {id: 4, name: 'Silver III'},\r\n                {id: 5, name: 'Silver II'},\r\n                {id: 6, name: 'Silver I'},\r\n                {id: 7, name: 'Gold III'},\r\n                {id: 8, name: 'Gold II'},\r\n                {id: 9, name: 'Gold I'},\r\n                {id: 10, name: 'Diamond III'},\r\n                {id: 11, name: 'Diamond II'},\r\n                {id: 12, name: 'Diamond I'},\r\n                {id: 13, name: 'Champion III'},\r\n                {id: 14, name: 'Champion II'},\r\n                {id: 15, name: 'Champion I'},\r\n            ]\r\n\r\n            const curLeague = league.filter(l => l.id === resp.league);\r\n            \r\n            rank = curLeague[0].name;\r\n\r\n        })\r\n        .catch(err => {\r\n            console.error(err);\r\n            dispatch(UISlice.actions.isLoading(false));\r\n            alert('An error occured');\r\n        })\r\n\r\n        return {\r\n            username        : username,\r\n            credits         : credits,\r\n            dec             : dec,\r\n            sps             : sps,\r\n            s_sps           : s_sps,\r\n            untamed         : untamed,\r\n            ecr             : ecr / 100,\r\n            quest_potion    : quest_potion,\r\n            gold_potion     : gold_potion,\r\n            legend_potion   : legend_potion,\r\n            power           : power,\r\n            rating          : rating,\r\n            rank            : rank\r\n        }\r\n    }\r\n\r\n    const addAccount = async (username) => {\r\n\r\n        dispatch(UISlice.actions.isLoading(true));\r\n        \r\n\r\n        const account = await getAccountDetails(username);\r\n\r\n        if (account)\r\n        {\r\n            dispatch(AccountSlice.actions.addAccount(account));\r\n\r\n            let accountList = JSON.parse((localStorage.getItem('accounts')));\r\n\r\n            accountList.push(account.username);\r\n\r\n            localStorage.setItem('accounts', JSON.stringify(accountList));\r\n        }\r\n\r\n        dispatch(UISlice.actions.isLoading(false));\r\n        return;\r\n\r\n    }\r\n\r\n    const getAllAccounts = async(accounts) => {\r\n        let accountsArr = [];\r\n        for(const account of accounts)\r\n        {\r\n            const details = await getAccountDetails(account);\r\n            accountsArr.push(details);\r\n        }\r\n\r\n        return accountsArr;\r\n    }\r\n\r\n    const refresh = async() => {\r\n        const accountList = JSON.parse(localStorage.getItem('accounts'));\r\n        dispatch(UISlice.actions.isLoading(true));\r\n        await getAllAccounts(accountList)\r\n        .then(res => {\r\n            dispatch(AccountSlice.actions.setAccounts(res));\r\n        });\r\n        dispatch(UISlice.actions.isLoading(false));\r\n    }\r\n\r\n\r\n    useEffect(()=> {\r\n        const init = async () => {\r\n            //get stored settings\r\n            const settings = JSON.parse(localStorage.getItem('settings'));\r\n            if (settings)\r\n            {\r\n                dispatch(UISlice.actions.setCurrency(settings.currency));\r\n                dispatch(UISlice.actions.setTheme(settings.darkTheme));\r\n            }\r\n            //\r\n\r\n            //check prices\r\n\r\n            let dec_price = await getDECPrice('USD');\r\n            let sps_price = await getSPSPrice('USD');\r\n\r\n            let con_dec_price = await getDECPrice(settings.currency);\r\n            let con_sps_price = await getSPSPrice(settings.currency);\r\n\r\n            console.log(settings.currency);\r\n            console.log(con_dec_price);\r\n\r\n            dispatch(SummarySlice.actions.setTotal({\r\n                ...summary.total,\r\n                dec_price : dec_price,\r\n                sps_price : sps_price,\r\n                con_dec_price: con_dec_price,\r\n                con_sps_price : con_sps_price\r\n            }))\r\n\r\n            let accountsList = JSON.parse(localStorage.getItem('accounts'));\r\n\r\n            if(accountsList) //retrieve details \r\n            {\r\n                dispatch(UISlice.actions.isLoading(true));\r\n                await getAllAccounts(accountsList)\r\n                .then(res => {\r\n                    dispatch(AccountSlice.actions.setAccounts(res));\r\n                });\r\n                dispatch(UISlice.actions.isLoading(false));\r\n            }\r\n            else // set accounts in localStorage\r\n            {\r\n                localStorage.setItem('accounts', '[]')\r\n            }\r\n        }\r\n\r\n        init();\r\n\r\n        //set timer to update every 5 mins\r\n        setInterval(async ()=>{\r\n            const settings = JSON.parse(localStorage.getItem('settings'));\r\n            //update dec and sps price\r\n            const dec_price = await getDECPrice('USD');\r\n            const sps_price = await getSPSPrice('USD');\r\n            let con_dec_price = await getDECPrice(settings.currency);\r\n            let con_sps_price = await getSPSPrice(settings.currency);\r\n\r\n            dispatch(SummarySlice.actions.setTotal({\r\n                ...summary.total,\r\n                dec_price : dec_price,\r\n                sps_price : sps_price,\r\n                con_dec_price : con_dec_price,\r\n                con_sps_price : con_sps_price\r\n            }));\r\n\r\n            \r\n\r\n        }, 20000)\r\n    }, []);\r\n\r\n\r\n\r\n    //calculate total\r\n    let total_accounts = 0;\r\n    let total_dec = 0;\r\n    let total_sps = 0;\r\n    let total_ssps = 0;\r\n    let total_con_dec = 0;\r\n    let total_con_sps = 0;\r\n    let total_con_ssps = 0;\r\n\r\n    accounts.forEach(a => {\r\n        total_accounts ++;\r\n        total_dec += a.dec;\r\n        total_sps += a.sps;\r\n        total_ssps += a.s_sps\r\n    })\r\n\r\n    total_con_dec = total_dec * summary.total.con_dec_price;\r\n    total_con_sps = total_sps * summary.total.con_sps_price;\r\n    total_con_ssps = total_ssps * summary.total.con_sps_price;\r\n\r\n    return (\r\n        <div id=\"summary\" className=\"p-3 container container-lg\">\r\n            {(summary.form.show) ? <AddAccountModal fnAddAccount={addAccount}/> : ''}\r\n            <div id=\"tiles-container\" className=\"row\">\r\n                <div className=\"tile col-md-4 p-2\">\r\n                    <Card className=\"text-white\" header=\"TOTAL ACCOUNT\" headerclass=\"text-center\" style={{backgroundColor: \"#444\"}}>\r\n                        <div className=\"text-center\">\r\n                            <span className=\"total_account\">{total_accounts}</span>\r\n                        </div>\r\n                    </Card>\r\n                </div>\r\n                <div className=\"tile col-md-4 p-2\">\r\n                    <Card className=\"text-white\" header=\"TOTAL IN-GAME DEC\" headerclass=\"text-center\" style={{backgroundColor: \"#444\"}}>\r\n                        <div className=\"text-center\">\r\n                            <span >{total_dec.toLocaleString()}</span>\r\n                            <div className=\"price_conv\"><span>{`(${ui.currency} ${total_con_dec.toLocaleString()})`}</span></div>\r\n                        </div>\r\n                    </Card>\r\n                </div>\r\n                <div className=\"tile col-md-4 p-2\">\r\n                    <Card className=\"text-white\" header=\"TOTAL SPS\" headerclass=\"text-center\" style={{backgroundColor: \"#444\"}}>\r\n                        <div className=\"text-center\">\r\n                            <span >{total_sps.toLocaleString()}</span>\r\n                            <div className=\"price_conv\"><span>{`(${ui.currency} ${total_con_sps.toLocaleString()})`}</span></div>\r\n                        </div>\r\n                    </Card>\r\n                </div>\r\n                <div className=\"tile col-md-4 p-2\">\r\n                    <Card className=\"text-white\" header=\"TOTAL STAKED SPS\" headerclass=\"text-center\" style={{backgroundColor: \"#444\"}}>\r\n                        <div className=\"text-center\">\r\n                            <span >{total_ssps.toLocaleString()}</span>\r\n                            <div className=\"price_conv\"><span>{`(${ui.currency} ${total_con_ssps.toLocaleString()})`}</span></div>\r\n                        </div>\r\n                    </Card>\r\n                </div>\r\n                <div className=\"tile col-md-4 p-2\">\r\n                    <Card className=\"text-white\" header=\"CURRENT DEC PRICE\" headerclass=\"text-center\" style={{backgroundColor: \"#444\"}}>\r\n                        <div className=\"text-center\">\r\n                            <span >{`$${summary.total.dec_price}`}</span>\r\n                            <div className=\"price_conv\"><span>{`(${ui.currency} ${summary.total.con_dec_price})`}</span></div>\r\n                        </div>\r\n                    </Card>\r\n                </div>\r\n                <div className=\"tile col-md-4 p-2\">\r\n                    <Card className=\"text-white\" header=\"CURRENT SPS PRICE\" headerclass=\"text-center\" style={{backgroundColor: \"#444\"}}>\r\n                        <div className=\"text-center\">\r\n                            <span >{`$${summary.total.sps_price}`}</span>\r\n                            <div className=\"price_conv\"><span>{`(${ui.currency} ${summary.total.con_sps_price})`}</span></div>\r\n                        </div>\r\n                    </Card>\r\n                </div>\r\n                \r\n            </div>\r\n\r\n            <div className=\"row p-2\">\r\n                <AccountList accounts={accounts} fnRefresh={refresh}/>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Summary;","import React from 'react';\r\nimport './card-list.css';\r\n\r\nconst CardList = () => {\r\n\r\n    return (\r\n        <div className=\"d-flex justify-content-center align-items-center w-100 h-100\" id=\"card-list\">\r\n            <div id=\"main\">\r\n                <h5>Page is still under development...</h5>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\nimport './rented-cards.css';\r\n\r\nconst RentedCards = () => {\r\n\r\n    return (\r\n        <div className=\"d-flex justify-content-center align-items-center w-100 h-100\" id=\"rented-cards\">\r\n            <div id=\"main\">\r\n                <h5>Page is still under development...</h5>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RentedCards;","import {useSelector} from 'react-redux';\nimport './App.css';\nimport Header from './components/header/header';\nimport Loading from './components/loading/loading';\nimport Settings from './components/settings/settings';\nimport Summary from './pages/summary/summary';\nimport {Switch, Route, Redirect} from 'react-router-dom';\nimport CardList from './pages/card-list/card-list';\nimport RentedCards from './pages/rented-cards/rented-cards';\n\n\nfunction App() {\n\n  const ui = useSelector(state => state.ui);\n\n  return (\n    <div className=\"App\">\n      {ui.isLoading && <Loading/>}\n      {ui.isShowSettings && <Settings/>}\n      <Header/>\n        <Switch>\n          <Route exact path=\"/dashboard\">\n            <Summary/>\n          </Route>\n          <Route exact path=\"/cards\">\n            <CardList/>\n          </Route>\n          <Route exact path=\"/rented-cards\">\n            <RentedCards/>\n          </Route>\n          <Route exact path=\"/pagenotfound\">\n              Page not found.\n          </Route>\n          <Route exact path=\"/\">\n            <Redirect to=\"/dashboard\"/>\n          </Route>\n          <Route path=\"\"><Redirect to=\"/pagenotfound\"/></Route>\n        </Switch>\n        \n        \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {configureStore} from '@reduxjs/toolkit';\r\nimport AccountSlice from '../slices/account-slice';\r\nimport SummarySlice from '../slices/summary-slice';\r\nimport UISlice from '../slices/ui-slice';\r\n\r\nconst store = configureStore({\r\n    reducer : {\r\n        accounts    : AccountSlice.reducer,\r\n        ui          : UISlice.reducer,\r\n        summary     : SummarySlice.reducer\r\n    }\r\n});\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from 'react-redux';\nimport store from './store/store';\nimport {BrowserRouter as Router, useLocation} from 'react-router-dom';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router>\n        <App/>\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nreportWebVitals();\n"],"sourceRoot":""}